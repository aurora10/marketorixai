# Filename: Dockerfile.prod - The final, correct version for Next.js

# ----------------- STAGE 1: DEPENDENCY INSTALLATION -----------------
FROM node:18-alpine AS deps
WORKDIR /app
COPY package.json package-lock.json* ./
RUN npm ci

# ----------------- STAGE 2: CODE BUILDER -----------------
FROM node:18-alpine AS builder
WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY . .

# Next.js automatically reads .env.production during the build.
# We create this file using the build argument passed from the GitHub Actions workflow.
ARG NEXT_PUBLIC_STRAPI_API_URL
RUN echo "NEXT_PUBLIC_STRAPI_API_URL=$NEXT_PUBLIC_STRAPI_API_URL" > .env.production

# Run the build. Next.js will use the .env.production file.
RUN npm run build

# ----------------- STAGE 3: PRODUCTION RUNNER -----------------
FROM node:18-alpine AS runner
WORKDIR /app

ENV NODE_ENV=production

# Copy only the necessary, optimized parts from the builder stage
COPY --from=builder /app/public ./public
COPY --from=builder /app/next.config.mjs ./
COPY --from=builder /app/package.json ./

# The standalone output contains only what's needed to run the app
COPY --from=builder --chown=1001:1001 /app/.next/standalone ./
COPY --from=builder --chown=1001:1001 /app/.next/static ./.next/static

EXPOSE 3000
ENV PORT 3000

# The command to start the optimized Next.js server from the standalone output
CMD ["node", "server.js"]