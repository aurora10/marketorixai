version: "3.8"

services:
  # Next.js Frontend
  app:
    image: aurora1010/marketorix:${FRONTEND_TAG:-latest}
    container_name: marketorix-nextjs
    restart: unless-stopped
    networks:
      - n8n_default
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.marketorix-app.rule=Host(`${DOMAIN_NAME}`)"
      - "traefik.http.routers.marketorix-app.entrypoints=websecure"
      - "traefik.http.routers.marketorix-app.tls.certresolver=mytlschallenge"
      - "traefik.http.services.marketorix-app.loadbalancer.server.port=3000"

  # Strapi Backend
  strapi:
    image: aurora1010/my-blog-strapi-v2:latest-prod # Make sure this points to your new image name
    container_name: marketorix-strapi
    restart: unless-stopped
    env_file: .env
    volumes:
      - strapi-uploads:/opt/app/public/uploads
    networks:
      - n8n_default
      - default
    # This is now correctly uncommented to ensure proper startup order
    depends_on:
      - db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.marketorix-strapi.entrypoints=websecure"
      - "traefik.http.routers.marketorix-strapi.tls.certresolver=mytlschallenge"
      - "traefik.http.services.marketorix-strapi.loadbalancer.server.port=1337"
      - "traefik.http.routers.marketorix-strapi.rule=Host(`${DOMAIN_NAME}`) && PathPrefix(`/strapi`)"
      - "traefik.http.middlewares.strapi-stripprefix.stripprefix.prefixes=/strapi"
      - "traefik.http.routers.marketorix-strapi.middlewares=strapi-stripprefix@docker"

  # Strapi Database
  db:
    container_name: marketorix-db
    image: postgres:15-alpine
    restart: unless-stopped
    env_file: .env
    volumes:
      - strapi-data:/var/lib/postgresql/data
    networks:
      - default

# Volumes are now correctly declared
volumes:
  strapi-data:
  strapi-uploads:

networks:
  n8n_default:
    external: true
  default:
    driver: bridge