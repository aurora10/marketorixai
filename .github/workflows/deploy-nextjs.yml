name: Build and Deploy Frontend

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  # JOB 1: BUILD AND PUSH THE FRONTEND IMAGE
  build-and-push-frontend:
    name: Build & Push Frontend Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Next.js image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.prod
          platforms: linux/amd64,linux/arm64
          push: true
          tags: aurora1010/marketorix:${{ github.sha }}
          build-args: |
            NEXT_PUBLIC_STRAPI_API_URL=https://${{ secrets.STRAPI_DOMAIN_NAME }}

  # JOB 2: DEPLOY TO VPS
  deploy:
    name: Deploy Frontend to VPS
    runs-on: ubuntu-latest
    needs: build-and-push-frontend

    steps:
      - name: Deploy to VPS via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_SSH_HOST }}
          username: ${{ secrets.VPS_SSH_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            # Navigate to the project directory on the server
            cd ~/marketorix

            # Pull the latest changes from the main branch to update config files
            echo "Pulling latest changes from git..."
            git pull origin main

            # Update the .env file with the new image tag
            echo "Updating .env file with new frontend tag..."
            grep -q '^FRONTEND_TAG=' .env && sed -i "s/^FRONTEND_TAG=.*/FRONTEND_TAG=${{ github.sha }}/" .env || echo "FRONTEND_TAG=${{ github.sha }}" >> .env

            echo "Pulling the latest frontend image..."
            docker-compose -f docker-compose.prod.yml pull app

            echo "Restarting the frontend service..."
            docker-compose -f docker-compose.prod.yml up -d --no-deps --force-recreate app
            
            echo "Pruning old, unused Docker images..."
            docker image prune -af
            
            echo "Frontend deployment complete!"
