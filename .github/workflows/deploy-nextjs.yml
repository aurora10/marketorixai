# .github/workflows/deploy-nextjs.yml
name: Deploy Next.js App to VPS

on:
  push:
    branches:
      - main # Or your deployment branch
  workflow_dispatch:

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Clean up previous Buildx builder
        run: |
          echo "Listing existing buildx builders..."
          docker buildx ls
          echo "Attempting to remove default builder..."
          docker buildx rm --force --keep-state=false default || echo "Builder 'default' not found or removal failed, continuing..."
          echo "Listing builders after removal attempt..."
          docker buildx ls

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          # ----> RE-ENABLE MULTI-PLATFORM BUILD <----
          platforms: linux/amd64,linux/arm64 # Build for both architectures
          # ----------------------------------------
          tags: |
            aurora1010/marketorix:latest
            aurora1010/marketorix:${{ github.sha }}
          # --- Optional: Add build args if your build needs env vars ---
          build-args: |
            NEXT_PUBLIC_GA_ID=${{ secrets.NEXT_PUBLIC_GA_ID }}
           
          -----------------------------------------------------------

          # --- Keep cache disabled for now, or re-enable if you feel confident ---
          # cache-from: type=gha
          # cache-to: type=gha,mode=max
          # --------------------------------------------

      - name: Deploy to VPS via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_SSH_HOST }}
          username: ${{ secrets.VPS_SSH_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            # !!! Adjust cd path if needed on VPS !!!
            cd ~/marketorix || exit 1
            echo "Pulling latest image for app service..."
            # Assuming your docker-compose.yml references aurora1010/marketorix:latest
            sudo docker-compose pull app || exit 1
            echo "Restarting app service..."
            sudo docker-compose up -d --force-recreate --remove-orphans app || exit 1
            echo "Pruning old Docker images..."
            sudo docker image prune -af
            echo "Deployment complete!"